@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="rotate-container">
  <div id="rotatable-object" class="rotatable-object"></div>
  <button type="button" class="btn btn-info" onclick="rotateLeft()">turn left</button>
  <button type="button" class="btn btn-info" onclick="rotateRight()">turn right</button>
</div>
<p id="info"></p>
<svg id="plan" viewBox="0 0 1000 1000" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xml="http://www.w3.org/XML/1998/namespace" version="1.1">
    @foreach (var rect in Model)
    {
            <rect onclick="myclick(@rect.Number)" x="@rect.X" y="@rect.Y" width="@rect.Width" height="@rect.Height" style="fill:rgb(106,90,205);stroke-width:3;stroke:rgb(72,61,139)" />
        @*         <text>
            <text x="@rect.X+20" x="@rect.Y+20" width="100" height="100" fill="red">@rect.Number</text>
            </text>
        *@  }
    <polyline points="20, 20, 450, 20, 450, 120, 270, 120, 270, 410, 20, 410, 20, 20"
              style="fill:none;stroke:midnightblue;stroke-width:3" />
</svg>
<script>
    function myclick(room) {
        // alert("click "+room);
        var el = document.getElementById("info");
        el.innerHTML = room;
    }
</script>
@*<script>
    const rotation_obj = document.getElementById("plan");
    let isDragging = false;
    let startMouseX = 0;
    let startMouseY = 0;
    let startRotation = 0;

    rotation_obj.addEventListener("mousedown", (event) =>{
        isDragging = true;
        startMouseX = event.clientX;
        startMouseY = event.clientY;
        //startRotation = getRotationInDegrees(rotation_obj.style.transform);
    });

    document.addEventListener("mousemove", (event) => {
        if(isDragging){
            const deltaX = event.clientX - startMouseX;
            const deltaY = event.clientY - startMouseY;
            startRotation += deltaX + deltaY;
            rotation_obj.style.transform = `translate(-50%, -50%) rotate(${startRotation}deg)`;

            startMouseX = event.clientX;
            startMouseY = event.clientY;
            //const angle = Math.atan2(deltaX, deltaY);
            //const rotationInDegrees = angle * (180 / Math.PI) + startRotation;
            //rotation_obj.style.transform = `rotate(${rotationInDegrees}deg)`;
        }
    });

    document.addEventListener("mouseup", () => {
        isDragging = false;
    });

    function getRotationInDegrees(transformString){
        const match = transformString.match(/rotate\(([^deg)]+)deg\)/);
        return match ? parseFloat(match[1]) : 0;
    }
</script>*@

@*<script>
    // Получаем ссылку на объект, который будет вращаться
    const rotatableObject = document.getElementById('plan');

    // Устанавливаем начальный угол поворота
    let rotationAngle = 0;

    // Отслеживаем событие перемещения мыши
    document.addEventListener('mousemove', handleMouseMove);

    function handleMouseMove(event) {
        // Рассчитываем угол поворота относительно центра объекта
        const mouseX = event.clientX - rotatableObject.offsetLeft;
        const mouseY = event.clientY - rotatableObject.offsetTop;
        const objectCenterX = rotatableObject.clientWidth / 2;
        const objectCenterY = rotatableObject.clientHeight / 2;
        const angle = Math.atan2(mouseY - objectCenterY, mouseX - objectCenterX);
        const angleDegrees = angle * (180 / Math.PI);

        // Устанавливаем угол поворота объекта с плавным переходом
        rotatableObject.style.transform = `rotate(${angleDegrees + rotationAngle}deg)`;
    }

    // При клике на объекте увеличиваем угол поворота на 90 градусов
    rotatableObject.addEventListener('click', () => {
        rotationAngle += 90;
        rotatableObject.style.transform = `rotate(${rotationAngle}deg)`;
    });
</script>*@
<script>
    let rotation = 0;

function rotateLeft() {
  rotation -= 90;
  updateRotation();
}

function rotateRight() {
  rotation += 90;
  updateRotation();
}

function updateRotation() {
  const rotatableObject = document.getElementById('plan');
  rotatableObject.style.transform = `rotate(${rotation}deg)`;
}
</script>